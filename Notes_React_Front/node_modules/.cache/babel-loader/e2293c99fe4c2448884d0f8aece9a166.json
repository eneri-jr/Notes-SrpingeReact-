{"ast":null,"code":"var _jsxFileName = \"/home/juniorleal/Documentos/projeto_notas/javascript_note/src/components/notes/editor/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill'; // ES6\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('');\n  useEffect(() => {\n    setCurrentContent(props.note.body);\n  }, [props.note]);\n\n  const updateNote = content => {\n    //const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\n    props.updateNote(props.note, {\n      /*'title': title,*/\n      'body': content\n    });\n  };\n\n  const [timer, setTimer] = useState(null);\n\n  const handleChange = (content, delta, source) => {\n    clearTimeout(timer);\n\n    if (source == 'user') {\n      setCurrentContent(content);\n      setTimer(setTimeout(() => updateNote(content), 2000));\n    }\n  };\n\n  const modules = {\n    toolbar: [[{\n      'header': '1'\n    }, {\n      'header': '2'\n    }, {\n      'font': []\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link'], ['clean']]\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    value: currentContent,\n    onChange: handleChange,\n    modules: modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/home/juniorleal/Documentos/projeto_notas/javascript_note/src/components/notes/editor/index.js"],"names":["React","Fragment","useState","useEffect","ReactQuill","Editor","props","currentContent","setCurrentContent","note","body","updateNote","content","timer","setTimer","handleChange","delta","source","clearTimeout","setTimeout","modules","toolbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAAsC;;AACtC,OAAO,iCAAP,C,CAA0C;;AAE1C,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,iBAAiB,CAACF,KAAK,CAACG,IAAN,CAAWC,IAAZ,CAAjB;AACD,GAFQ,EAEN,CAACJ,KAAK,CAACG,IAAP,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAIC,OAAD,IAAa;AAC9B;AACAN,IAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACG,IAAvB,EAA6B;AAAC;AAAoB,cAAQG;AAA7B,KAA7B;AACD,GAHD;;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMa,YAAY,GAAG,CAACH,OAAD,EAAUI,KAAV,EAAiBC,MAAjB,KAA2B;AAC9CC,IAAAA,YAAY,CAACL,KAAD,CAAZ;;AACA,QAAGI,MAAM,IAAI,MAAb,EAAoB;AAClBT,MAAAA,iBAAiB,CAACI,OAAD,CAAjB;AACAE,MAAAA,QAAQ,CAACK,UAAU,CAAC,MAAMR,UAAU,CAACC,OAAD,CAAjB,EAA4B,IAA5B,CAAX,CAAR;AACD;AACF,GAND;;AAQA,QAAMQ,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE,CACP,CAAC;AAAE,gBAAU;AAAZ,KAAD,EAAmB;AAAC,gBAAU;AAAX,KAAnB,EAAoC;AAAE,cAAQ;AAAV,KAApC,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,EAAwD,YAAxD,CAFO,EAGP,CAAC;AAAC,cAAQ;AAAT,KAAD,EAAsB;AAAC,cAAQ;AAAT,KAAtB,EACC;AAAC,gBAAU;AAAX,KADD,EACmB;AAAC,gBAAU;AAAX,KADnB,CAHO,EAKP,CAAC,MAAD,CALO,EAMP,CAAC,OAAD,CANO;AADK,GAAhB;AAWA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEd,cAAnB;AAAmC,IAAA,QAAQ,EAAEQ,YAA7C;AAA2D,IAAA,OAAO,EAAEK,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAef,MAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('')\n\n  useEffect(()=> {\n    setCurrentContent(props.note.body)\n  }, [props.note])\n\n  const updateNote = (content) => {\n    //const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\n    props.updateNote(props.note, {/*'title': title,*/ 'body': content})\n  }\n\n  const [timer, setTimer] = useState(null)\n\n  const handleChange = (content, delta, source) =>{\n    clearTimeout(timer);\n    if(source == 'user'){\n      setCurrentContent(content)\n      setTimer(setTimeout(() => updateNote(content), 2000))\n    }\n  }\n\n  const modules = {\n    toolbar: [\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, \n       {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean'],\n    ]\n  }\n\n  return (\n    <Fragment>\n      <ReactQuill value={currentContent} onChange={handleChange} modules={modules}/>\n    </Fragment>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}