{"ast":null,"code":"var _jsxFileName = \"/home/juniorleal/Documentos/TesteNotes/javascript_note/src/components/notes/compart/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UserService from '../../../services/users';\n\nfunction NotesCompart() {\n  const [email, setEmail] = useState(\"\");\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setEmail(user['email']);\n  };\n\n  useEffect(() => {\n    initializeUser();\n  }, []);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      await UserService.compart({\n        email: email\n      });\n      setStatus(\"success\");\n    } catch (err) {\n      setStatus(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"has-text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"name\",\n    value: name || \"\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"has-text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    value: email || \"\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Column.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"has-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"custom-purple\",\n    outlined: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Update\"))))), status == \"error\" && /*#__PURE__*/React.createElement(Help, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Problem in update\"), status == \"success\" && /*#__PURE__*/React.createElement(Help, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Updated with success\")));\n}\n\nexport default NotesCompart;","map":{"version":3,"sources":["/home/juniorleal/Documentos/TesteNotes/javascript_note/src/components/notes/compart/index.js"],"names":["React","Fragment","useState","useEffect","Button","Field","Control","Input","Column","Title","Help","Label","UserService","NotesCompart","email","setEmail","initializeUser","user","JSON","parse","localStorage","getItem","handleSubmit","evt","preventDefault","compart","setStatus","err","name","e","setName","target","value","status"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UserService from '../../../services/users';\n\nfunction NotesCompart() {\n  const [email, setEmail] = useState(\"\");\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setEmail(user['email']);\n  }\n\n  useEffect(() =>{\n    initializeUser()    \n  }, [])\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    try {\n      await UserService.compart({ email: email});\n      setStatus(\"success\")\n    } catch (err) {\n      setStatus(\"error\")\n    }\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Full Name</Label>\n            <Input\n              type=\"name\"\n              value={name || \"\"}\n              onChange={e => setName(e.target.value)}\n              required\n              name=\"name\"\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Email</Label>\n            <Input\n              type=\"email\"\n              value={email || \"\"}\n              onChange={e => setEmail(e.target.value)}\n              required\n              name=\"email\"\n            />\n          </Control>\n        </Field>\n\n        <Field>\n          <Control>\n            <Column.Group>\n              <Column className=\"has-text-right\">\n                <Button color=\"custom-purple\" outlined>Update</Button>\n              </Column>\n            </Column.Group>\n          </Control>\n        </Field>\n        {status == \"error\" &&\n          <Help color=\"danger\">Problem in update</Help>\n        }\n        {status == \"success\" &&\n          <Help color=\"primary\">Updated with success</Help>\n        }\n      </form>\n    </Fragment>\n  )\n\n\n}\n\nexport default NotesCompart;"]},"metadata":{},"sourceType":"module"}