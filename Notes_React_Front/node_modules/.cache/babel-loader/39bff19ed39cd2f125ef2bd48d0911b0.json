{"ast":null,"code":"var _jsxFileName = \"/home/juniorleal/Documentos/TesteNotes/javascript_note/src/components/notes/editor/index.js\";\nimport React, { Fragment, useState, useEffect, Form } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport ReactQuill from 'react-quill'; // ES6\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('');\n  const [timer, setTimer] = useState(null);\n  useEffect(() => {\n    setCurrentContent(props.note.body);\n  }, [props.note]);\n\n  const updateNote = content => {\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 10);\n    props.updateNote(props.note, {\n      'title': title,\n      'body': content\n    });\n  };\n\n  const handleChange = (content, delta, source) => {\n    clearTimeout(timer);\n\n    if (source == 'user') {\n      setCurrentContent(content);\n      setTimer(setTimeout(() => updateNote(content), 2000));\n    }\n  };\n\n  const modules = {\n    toolbar: [[{\n      'header': '1'\n    }, {\n      'header': '2'\n    }, {\n      'font': []\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link'], ['clean']]\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    value: currentContent,\n    onChange: handleChange,\n    modules: modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"has-text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"name\",\n    value: name || \"\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"has-text-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    value: email || \"\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"has-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"custom-purple\",\n    outlined: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Update\"))))), status == \"error\" && /*#__PURE__*/React.createElement(Help, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Problem in update\"), status == \"success\" && /*#__PURE__*/React.createElement(Help, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Updated with success\")));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/home/juniorleal/Documentos/TesteNotes/javascript_note/src/components/notes/editor/index.js"],"names":["React","Fragment","useState","useEffect","Form","Button","Field","Control","Input","Column","Title","Help","Label","ReactQuill","Editor","props","currentContent","setCurrentContent","timer","setTimer","note","body","updateNote","content","title","replace","slice","handleChange","delta","source","clearTimeout","setTimeout","modules","toolbar","handleSubmit","name","e","setName","target","value","email","setEmail","status"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, Form } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('');\n  const [timer, setTimer] = useState(null);\n\n  useEffect(()=> {\n    setCurrentContent(props.note.body)\n  }, [props.note])\n\n  const updateNote = (content) => {\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 10);\n    props.updateNote(props.note, {'title': title, 'body': content});\n  }\n\n  const handleChange = (content, delta, source) =>{\n    clearTimeout(timer);\n    if(source == 'user'){\n      setCurrentContent(content)\n      setTimer(setTimeout(() => updateNote(content), 2000))\n    }\n  }\n\n  const modules = {\n    toolbar: [\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, \n       {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean'],\n    ]\n  }\n\n  return (\n    <Fragment>\n      <ReactQuill value={currentContent} onChange={handleChange} modules={modules}/>\n    <form onSubmit={handleSubmit}>\n      <Field>\n        <Control>\n          <Label className=\"has-text-grey\">Full Name</Label>\n          <Input\n            type=\"name\"\n            value={name || \"\"}\n            onChange={e => setName(e.target.value)}\n            required\n            name=\"name\"\n          />\n        </Control>\n      </Field>\n      <Field>\n        <Control>\n          <Label className=\"has-text-grey\">Email</Label>\n          <Input\n            type=\"email\"\n            value={email || \"\"}\n            onChange={e => setEmail(e.target.value)}\n            required\n            name=\"email\"\n          />\n        </Control>\n      </Field>\n\n      <Field>\n        <Control>\n          <Column.Group>\n            <Column className=\"has-text-right\">\n              <Button color=\"custom-purple\" outlined>Update</Button>\n            </Column>\n          </Column.Group>\n        </Control>\n      </Field>\n      {status == \"error\" &&\n        <Help color=\"danger\">Problem in update</Help>\n      }\n      {status == \"success\" &&\n        <Help color=\"primary\">Updated with success</Help>\n      }\n    </form>\n  </Fragment>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}